From 4a982bca645e47cdf1d09267f5199f987f2bf45e Mon Sep 17 00:00:00 2001
From: Yuta Saito <kateinoigakukun@gmail.com>
Date: Sun, 4 Sep 2022 14:34:24 +0000
Subject: [PATCH] wasm/setjmp.c: allocate asyncify buffer on heap to save stack
 usage

---
 wasm/setjmp.c | 7 +++++--
 wasm/setjmp.h | 1 -
 2 files changed, 5 insertions(+), 3 deletions(-)

diff --git a/wasm/setjmp.c b/wasm/setjmp.c
index 1e69cb1c64..9d067eff2c 100644
--- a/wasm/setjmp.c
+++ b/wasm/setjmp.c
@@ -51,8 +51,9 @@ enum rb_wasm_jmp_buf_state {
 void
 async_buf_init(struct __rb_wasm_asyncify_jmp_buf* buf)
 {
-    buf->top = &buf->buffer[0];
-    buf->end = &buf->buffer[WASM_SETJMP_STACK_BUFFER_SIZE];
+    char *buffer = malloc(WASM_SETJMP_STACK_BUFFER_SIZE);
+    buf->top = &buffer[0];
+    buf->end = &buffer[WASM_SETJMP_STACK_BUFFER_SIZE];
 }
 
 // Global unwinding/rewinding jmpbuf state
@@ -85,6 +86,8 @@ _rb_wasm_setjmp_internal(rb_wasm_jmp_buf *env)
         asyncify_stop_rewind();
         RB_WASM_DEBUG_LOG("[%s] JMP_BUF_STATE_RETURNING\n", __func__);
         env->state = JMP_BUF_STATE_CAPTURED;
+        free(env->longjmp_buf.top);
+        free(env->setjmp_buf.top);
         _rb_wasm_active_jmpbuf = NULL;
         return env->payload;
     }
diff --git a/wasm/setjmp.h b/wasm/setjmp.h
index 65e35c03b3..ddfc742270 100644
--- a/wasm/setjmp.h
+++ b/wasm/setjmp.h
@@ -11,7 +11,6 @@
 struct __rb_wasm_asyncify_jmp_buf {
     void* top;
     void* end;
-    char buffer[WASM_SETJMP_STACK_BUFFER_SIZE];
 };
 
 typedef struct {
-- 
2.36.1

